1.4 总结
	java是一种强大的编程语言，但是现在它已经略显老态。
随着时代的发展，那些以前指定的规则已经有些不太合适了。
java仍然是无处不在的，它的工具、类库仍然既方便有实用。
    在本章中，我们探讨了java的一部分问题，从冗长的匿名内部类
到静态类型。大多数java开发者已经习惯了这些“问题”，甚至把这些
bug视为特点。但是，只要添加一点点Groovy，就可以让生产力获得极大的提升
仅仅使用Groovy添加到java标准类库中的容器和方法，就能使代码量锐减。
我也已经列出了Groovy简化java开发的一大堆能力。
	尽管Groovy为如此强大（又如此有趣），我依然觉得它不能取代java。
在本书中，我一直强调将两者混合起来。这个使用哲学是当我们要用强大的
工具、类库的时候去使用java，当Groovy能简化java开发的时候去使用
Groovy。在下一章，我们就将开始Groovy和java的整合之旅。